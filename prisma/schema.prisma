// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filteredRelationCount"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(uuid())
  email         String       @unique
  name          String
  surname       String
  password      String
  emailVerified Boolean      @default(true)
  Group_User    Group_User[]
  Items         Item[]
}

model Group {
  id                String       @id @default(uuid())
  name              String
  needsConfirmation Boolean
  Group_User        Group_User[]
  Trip              Trip[]
}

model Group_User {
  id        String  @id @default(uuid())
  group     Group   @relation(fields: [groupId], references: [id])
  groupId   String
  user      User    @relation(fields: [userId], references: [id])
  userId    String
  isAdmin   Boolean
  confirmed Boolean
}

model Trip {
  id              String   @id @default(uuid())
  group           Group    @relation(fields: [groupId], references: [id])
  groupId         String
  name            String
  location        String?
  locationName    String?
  meetup          String?
  meetupName      String?
  timestamp       DateTime
  AllItems        Item[]   @relation("AllItems")
  BroughtItems    Item[]   @relation("BroughtItems")
  NotifiableItems Item[]   @relation("NotifiableItems")
}

model Item {
  id String @id @default(uuid())

  Trip                Trip?   @relation("AllItems", fields: [tripId], references: [id])
  // useless
  BroughtOnTrip       Trip?   @relation("BroughtItems", fields: [tripId], references: [id])
  NotifiedOnTrip      Trip?   @relation("NotifiableItems", fields: [tripId], references: [id])
  // end of useless
  tripId              String?
  User                User?   @relation(fields: [userId], references: [id])
  userId              String?
  name                String
  confirmedOnAdding   Boolean
  requestedToBring    Boolean
  confirmedOnBringing Boolean
  brought             Boolean
}

// Bringing Table
// model Item_User {
//   id        String  @id @default(uuid())
//   user      User    @relation(fields: [userId], references: [id])
//   userId    String
//   item      Item    @relation(fields: [itemId], references: [id])
//   itemId    String
//   confirmed Boolean
//   brought   Boolean
// }
